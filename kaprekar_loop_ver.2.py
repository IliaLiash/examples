def numerics(n):
    list1 = []
    
    while n != 0:
        list1.append(n % 10)
        n = n // 10
    
    return list1

def kaprekar_step(L):
    L = sorted(L)
    
    num1 = ''.join(str(element) for element in L)
    num2 = ''.join(str(element) for element in L[::-1])
    
    return int(num2) - int(num1)

def kaprekar_loop(n):
    list1 = []
   
    if n in [100, 1000, 100000]:
        return print("Ошибка! На вход подано число {}, не удовлетворяющее условиям процесса Капрекара".format(n))
    if len(set(str(n))) == 1:
        return print("Ошибка! На вход подано число {}, не удовлетворяющее условиям процесса Капрекара".format(n))
    
    while n not in [495, 6174, 549945, 631764]:
        
        if n in list1:
            print("Следующее число - {}, кажется процесс зациклился...".format(n))
            break
        else: 
            print(n)
            list1.append(n)
            n = kaprekar_step(numerics(n))
        
    if n in [495, 6174, 549945, 631764]:
        print(n)
        
'''
Пришло время объединить все наши наработки.

Напишите функцию kaprekar_loop(n), которая принимает целое число, и запускающую "Процесс Капрекара" (если это возможно), выводящее на печать каждое число цикла с новой строки до тех пор, пока не будет получено число Капрекара.

Конечных постоянных Капрекара (таких, которые в результате процесса переходят сами в себя) известно 4: 495, 6174, 549945, 631764.
Для некоторых 6-значных чисел возможно не будет найдена постоянная Капрекара, но процесс "зациклится", т.е. одни и те же числа будут получаться по кругу. В этом случае необходимо прервать процедуру на первом повторном числе.

Таким образом возможны 3 случая:
Число не удовлетворяет условиям процесса Капрекара - выводим сообщение "Ошибка! На вход подано число {}, не удовлетворяющее условиям процесса Капрекара"
Процесс Капрекара сойдётся к постоянной Капрекара (495, 6174, 549945 или 631764) - выводим на печать все числа, начиная с исходного и до постоянной Капрекара, каждое с новой строки
Процесс Капрекара зациклится - выводим все числа до момента зацикливания, после чего выводим сообщение "Следующее число - {}, кажется процесс зациклился..."


Примечание1. В этой задаче не нужно ничего считывать и ничего выводить на печать. Только реализовать функцию.

Примечание2. Рекомендуем использовать ранее написанные функции numerics(n), kaprekar_check(n) и kaprekar_step(L) чтобы ваш код был проще и читабельнее.
'''
